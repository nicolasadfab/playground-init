var Adfab = Adfab || {}, _pg = _pg || {}, pl_config = {modules:{ears:!1, mouth:!1}, scripts:{xpath:"//192.168.1.103/playground-init/js/lib/wgxpath.install.js", json:"//192.168.1.103/playground-init/js/lib/json2.js", ears:"//192.168.1.103/plaground-ears/js/ears.min.js", mouth:"//ic.adfab.fr/mouthnode/leaderboard/others/client-0/script/pg.connect.js"}, debug:!0, mode:"dev", env:{dev:{url:"192.168.1.103/plaground-ears/", send:"send.php", connect:"connect.php"}, prod:{url:"livedemo.fr/playground/", send:"send.php", 
connect:"connect.php"}}, ns:"Adfab.playground"};
function extend(a, b) {
  var c = Object.prototype.toString, d = c.call({}), e;
  for(e in b) {
    b[e] && d == c.call(b[e]) ? (a[e] = a[e] || {}, extend(a[e], b[e])) : a[e] = b[e]
  }
  return a
}
function addToNamespace(a, b) {
  var c = {};
  c[a] = b;
  return extend(Adfab, {Playground:c})
}
;var pgutil = {not_null:function(a) {
  return null != a ? "undefined" != typeof a ? "" !== a ? !0 : !1 : !1 : !1
}, getObjectFromXpath:function(a) {
  a = document.evaluate(a, document.documentElement, null, XPathResult.ORDERED_NODE_ITERATOR_TYPE, null);
  var b = [];
  if(a) {
    for(var c = a.iterateNext();c;) {
      b.push(c), c = a.iterateNext()
    }
  }
  return b
}, checkXpath:function(a) {
  return 0 < PG.Util.getObjectFromXpath(a).length ? !0 : !1
}, getValueFromObject:function(a) {
  var b = "";
  PG.Util.not_null(a) && ("object" == typeof a && void 0 != a.type) && (void 0 != a.value ? b = a.value : void 0 != a.innerHTML && (b = a.innerHTML));
  return b
}, createCookie:function(a, b, c) {
  if(PG.Cache.localstorage) {
    localStorage.setItem(PG.Config.ns + "." + a, b)
  }else {
    if(c) {
      var d = new Date;
      d.setTime(d.getTime() + 864E5 * c);
      c = "; expires\x3d" + d.toGMTString()
    }else {
      c = ""
    }
    document.cookie = PG.Config.ns + "." + a + "\x3d" + encodeURIComponent(b) + c + "; path\x3d/"
  }
}, readCookie:function(a) {
  if(PG.Cache.localstorage) {
    return localStorage.getItem(PG.Config.ns + "." + a)
  }
  a = PG.Config.ns + "." + a + "\x3d";
  for(var b = document.cookie.split(";"), c = 0, d = "", c = 0;c < b.length;c++) {
    for(d = b[c];" " == d.charAt(0);) {
      d = d.substring(1, d.length)
    }
    if(0 == d.indexOf(a)) {
      return decodeURIComponent(d.substring(a.length, d.length))
    }
  }
  return null
}, eraseCookie:function(a) {
  if(PG.Cache.localstorage) {
    return localStorage.removeItem(PG.Config.ns + "." + a)
  }
  document.cookie = PG.Config.ns + "." + a + "\x3d''; expires\x3dThu, 01 Jan 1970 00:00:01 GMT; path\x3d/"
}, matchUrl:function(a) {
  try {
    return a = eval(a), a.test(top.location.href)
  }catch(b) {
    return!1
  }
}, isUrlValid:function(a) {
  return 0 <= PG.Config.env[PG.Config.mode].url.indexOf(a) ? !1 : !0
}, log:function(a) {
  PG.Config.debug && (console.log("%c\x3e PLAYGROUND DEBUG ::", "color:blue; font-weight:bold;"), console.log(a))
}, getDomElemntFromItem:function(a) {
  var b = null;
  "id" === a.selector ? b = document.getElementById(a.name) : "class" === a.selector && (b = document.getElementsByClassName(a.name), null !== b && 0 < b.length && (b = b[0]));
  return b
}, fireEvt:function(a, b, c) {
  if(window.dispatchEvent) {
    var d = document.createEvent("Event");
    d.initEvent(a, !0, !0);
    d.data = c;
    b.dispatchEvent(d)
  }else {
    window.fireEvent && b.fireEvent(a)
  }
}, saysWho:function() {
  var a = navigator.appName, b = navigator.userAgent, c, d = b.match(/(opera|chrome|safari|firefox|msie)\/?\s*(\.?\d+(\.\d+)*)/i);
  if(d && null != (c = b.match(/version\/([\.\d]+)/i))) {
    d[2] = c[1]
  }
  return d = d ? [d[1], d[2]] : [a, navigator.appVersion, "-?"]
}, loadJs:function(a, b) {
  var c = document.createElement("script"), d;
  c.type = "text/javascript";
  c.async = !0;
  c.src = a;
  d = document.getElementsByTagName("script")[0];
  d.parentNode.insertBefore(c, d);
  c.addEventListener("load", function() {
    b && b()
  })
}};
try {
  addToNamespace("Util", pgutil), addToNamespace("Config", pl_config)
}catch(e$$13) {
  throw Error("Cannot extends 'Util' to 'Adfab.playground.Util'");
}
;var PG = Adfab.Playground, init;
(function() {
  function a(b, c) {
    "undefined" !== typeof b[0] && PG.Util.not_null(b[0]) ? PG.Util.loadJs(b[0], function() {
      b.shift();
      a(b, c)
    }) : c && c()
  }
  var b = [], c = PG.Util.saysWho();
  "MSIE" === c[0] && "9.0" === c[1] && (b.push(PG.Config.scripts.xpath), b.push(PG.Config.scripts.json));
  a(b, function() {
    var c = PG.Util.getObjectFromXpath("//script[@data-pg-api-key]"), e = {};
    e.apiKey = c[0].getAttribute("data-pg-api-key");
    try {
      addToNamespace("Settings", e)
    }catch(f) {
      throw Error("Cannot extends 'app' to 'Adfab.playground.Settings'");
    }
    c[0].getAttribute("data-ears") && b.push(PG.Config.scripts.ears);
    c[0].getAttribute("data-mouth") && b.push(PG.Config.scripts.mouth);
    a(b, function() {
      try {
        addToNamespace("Config", pl_config)
      }catch(a) {
        throw Error("Cannot extends 'app' to 'Adfab.playground.Config'");
      }
    })
  })
})();
